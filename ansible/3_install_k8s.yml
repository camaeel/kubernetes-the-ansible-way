---
# generate keys and certs
- hosts: controlplane[0]
  become: true
  roles:
  - name: create_pki
    tags: create_pki

  post_tasks:
  # this steps requires pki secret files to be moved from servers to your local machine. It is simplification for learning purposes. 
  # On production you should consider more secure ways to distribute keys.
  # TODO: Replace with more secure solution
  - name: fetch pki files
    fetch: 
      src: "{{ pki_directory }}/{{ item }}"
      flat: yes
      dest: pki/
    loop: "{{ ['ca', 'kube-apiserver', 'service-account', 'etcd-server', 'admin'] | product(['crt', 'key']) | map('join', '.') | list }}"

  - name: change access rights
    become: false
    local_action:
      module: file
      path: "pki/{{ item }}"
      mode: 0600
    loop: "{{ ['ca', 'kube-apiserver', 'service-account', 'etcd-server'] | product(['crt', 'key']) | map('join', '.') | list }}"

- hosts: controlplane:!controlplane[0]
  become: true
  tasks: 
  - name: copy pki to remote host
    copy:
      dest: "{{ pki_directory }}/"
      owner: root
      group: root
      src: "pki/{{ item }}"
      mode: 0600
    loop: "{{ ['ca', 'kube-apiserver', 'service-account', 'etcd-server'] | product(['crt', 'key']) | map('join', '.') | list }}"

- hosts: workers
  become: true
  tasks: 
  - name: copy pki to remote host
    copy:
      dest: "{{ pki_directory }}/"
      owner: root
      group: root
      src: "pki/{{ item }}"
      mode: 0600
    loop: "{{ ['ca'] | product(['crt', 'key']) | map('join', '.') | list }}"

#generate local admin kubeconfig
- hosts: localhost
  tags: test
  vars: 
    cluster_name: kubernetes-the-ansible-way
  tasks:
  - name: create cluster
    command: "kubectl config set-cluster {{cluster_name}} --certificate-authority={{playbook_dir}}/pki/ca.crt --embed-certs=true --server=https://{{ hostvars['loadbalancer'].public_ip_address }}:6443"

  - name: create admin credentials
    command: kubectl config set-credentials admin --client-certificate={{playbook_dir}}/pki/admin.crt --client-key={{playbook_dir}}/pki/admin.key --embed-certs=true

  - name: create admin context
    command: "kubectl config set-context {{ admin_context_name }} --cluster={{cluster_name}} --user=admin"

