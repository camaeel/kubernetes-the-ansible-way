- name: create downloads dir
  file: 
    state: directory
    path: "{{ ansible_env.HOME }}/downloads"

# Optionally we could create a temporary directory
- name: create local tmp directory for checksums
  local_action:
    module: file
    state: directory
    path: /tmp/k8s-checksums-{{ kubernetes_version }}-{{ k8s_architecture }}
  become: False 

- name: download sha256 checksums
  local_action:
    module: get_url
    url: "{{ k8s_download_url }}/{{ kubernetes_version }}/bin/{{ k8s_architecture }}/{{ item }}.sha256"
    dest: /tmp/k8s-checksums-{{ kubernetes_version }}-{{ k8s_architecture }}
  become: False  
  loop:
  - kubectl
  - kube-apiserver
  - kube-controller-manager
  - kube-scheduler
  
- name: "download kubernetes binaries - version: {{ kubernetes_version }}"
  get_url: 
    url: "{{ k8s_download_url }}/{{ kubernetes_version }}/bin/{{ k8s_architecture }}/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: a+x
    checksum: "sha256:{{ checksum_var }}"
  vars:
    checksum_var: "{{ lookup('file', '/tmp/k8s-checksums-'+kubernetes_version+'-'+k8s_architecture+'/'+item+'.sha256') }}"
  loop:
  - kubectl
  - kube-apiserver
  - kube-controller-manager
  - kube-scheduler

- name: template service config
  template: 
    src: "{{ item }}.j2.service"
    dest: "/etc/systemd/system/{{ item }}.service"
  loop:
  - kube-apiserver
  - kube-controller-manager
  - kube-scheduler  
  notify:
  - "restart {{item}}"
  
- name: restart kube-apiserver
  systemd: 
    state: started
    daemon_reload: yes
    name: kube-apiserver 

- name: restart kube-controller-manager
  systemd: 
    state: restarted
    daemon_reload: yes
    name: kube-controller-manager 

- name: restart kube-scheduler
  systemd: 
    state: restarted
    daemon_reload: yes
    name: kube-scheduler 